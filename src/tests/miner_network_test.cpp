// Copyright 2025 The MWC Developers
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#include "miner_network_test.h"
#include "../miner/miner_network.h"
#include "../miner/utils.h"

void test_utils() {

    std::vector<uint8_t> v1 = hexstr2bin("00112233FF00");
    assert(v1.size() == 6);
    std::vector<uint8_t> expected = {0x00,0x11,0x22,0x33,0xFF,0x00};
    assert(v1 == expected);

    auto s = bin2hexstr(expected);
    assert( s == "00112233FF00");
}


void test_pow_nonce_hash() {
    CuckaJob job;
    job.prePow = {0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x14, 0xce, 0x8, 0x0, 0x0, 0x0, 0x0, 0x62, 0xbe, 0x77, 0x5, 0x0, 0xa,
        0xdf, 0xbb, 0x47, 0x41, 0x7, 0x8b, 0x65, 0x1, 0xdd, 0x96, 0xfd, 0x2c, 0x3e, 0x7b, 0xa4, 0x19, 0xbf, 0x8, 0xc7, 0x73,
        0x8d, 0xa4, 0x2a, 0xd6, 0x4, 0x53, 0x60, 0xbc, 0x30, 0xa6, 0xa1, 0xdf, 0xe7, 0xc5, 0x50, 0x81, 0x10, 0xa7, 0xcb, 0x2,
        0xd4, 0xe4, 0xb5, 0x55, 0x5b, 0x9a, 0xf3, 0x3b, 0x68, 0xa4, 0x4c, 0x11, 0x77, 0x2a, 0xbb, 0x4f, 0x5, 0x8b, 0x2e, 0xfe,
        0x68, 0x21, 0x1b, 0xcf, 0x36, 0xdb, 0xf9, 0x37, 0x95, 0xa9, 0xcf, 0xe0, 0x35, 0x78, 0x62, 0x56, 0x46, 0x91, 0x26, 0xd1,
        0x3d, 0xe7, 0xda, 0x70, 0xe2, 0x2c, 0x20, 0x6f, 0x8b, 0xe8, 0xd6, 0xc8, 0x34, 0x99, 0x15, 0xf, 0x47, 0x8e, 0x72, 0x3d,
        0x8a, 0x49, 0x33, 0xad, 0xaa, 0x80, 0xac, 0x17, 0x8c, 0x33, 0xf5, 0x73, 0x8, 0xac, 0x67, 0xb7, 0xe5, 0x17, 0xc5, 0xc2,
        0xf7, 0x3f, 0x3f, 0xa0, 0xd4, 0xc2, 0xae, 0xe0, 0xef, 0x24, 0x8f, 0x52, 0xda, 0x21, 0x52, 0x48, 0x4a, 0xe9, 0x5a, 0xbf,
        0x2f, 0xf3, 0xc9, 0x42, 0xfb, 0xd2, 0xca, 0x87, 0x1c, 0x72, 0x51, 0x9d, 0x7f, 0xcc, 0xa2, 0x5, 0x51, 0xf0, 0xd5, 0x94,
        0xfb, 0xd4, 0xda, 0x5, 0xca, 0x2a, 0x67, 0x5e, 0x39, 0xbb, 0x65, 0x7c, 0x65, 0xab, 0x6e, 0xf, 0xd3, 0x41, 0x82, 0x2d,
        0xc5, 0xc9, 0x99, 0xd8, 0x4e, 0x79, 0x94, 0x21, 0xa5, 0x1a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x36, 0x4f, 0xa7, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x2d, 0x8c, 0xef, 0x0, 0x0, 0x93, 0xef, 0x62, 0x47, 0xe5, 0x49, 0x0, 0x0, 0x0, 0xd};
    uint64_t nonce = 0x4c906a00bece31a0ULL;
    uint64_t v[4];
    job.calculate_seed_hash(  nonce, v);

    assert(v[0] == 0x4b9eb3c667991a63ULL);
    assert(v[1] == 0xa770b15fdacf837cULL);
    assert(v[2] == 0x686d242fdf5a2542ULL);
    assert(v[3] == 0xbaa22e8bf86440b8ULL);
}

